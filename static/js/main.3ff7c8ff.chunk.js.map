{"version":3,"sources":["components/globalStyles.js","components/theme.js","components/toggler.js","components/modal/modal.js","avatar/male.png","avatar/female.png","components/login/importImage.js","components/login/loginForm.js","components/login/loginApp.js","components/card/card.js","svg/link.svg","components/welcome/welcome.js","components/useDarkMode.js","components/modal/useModalState.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","darkTheme","Toggle","toggleTheme","onClick","id","className","Modal","props","item","data","filter","contentIndex","console","log","modalState","Togglemodal","xmlns","viewBox","d","src","img","title","description","drop","ev","document","querySelector","classList","contains","remove","removePlaceHolder","stopPropagation","preventDefault","list","childNodes","map","elt","add","files","dataTransfer","target","reader","FileReader","readAsDataURL","onload","image","Image","result","canvas","width","height","context","getContext","drawImage","selectImage","e","parentNode","base_image","getAttribute","importImage","onDrop","onDragOver","allowDrop","onDragLeave","allowDropLeave","type","onChange","maleImage","femaleImage","loginForm","placeholder","for","querySelectorAll","value","innerText","length","includes","submitStart","loginApp","Cards","alt","clickEvent","name","Welcome","useState","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","useDarkMode","themeToggler","modal","setModal","index","setIndex","useModalState","modalToggler","themeMode","JSONData","items","modules","onLoad","colors","balls","i","ball","createElement","style","background","Math","floor","random","left","top","transform","push","append","forEach","el","ra","to","x","y","animate","duration","direction","fill","iterations","Infinity","easing","animation","Link","scrollIntoView","behavior","scrollToElement","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3ff7c8ff.chunk.js","sourcesContent":["import { createGlobalStyle} from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.50s linear;\n  }\n  `\n  /* font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif; */\n","export const lightTheme = {\n    body: '#f0f2f6',\n    text: '#132540',\n    /* background: '#363537', */\n}\nexport const darkTheme = {\n    body: '#132540',\n    text: '#f0f2f6',\n    /* background: '#999', */\n}\n","import React from 'react';\nimport { string,func } from 'prop-types';\n\n\nconst Toggle = ({theme, toggleTheme }) => {\n\n    return (\n        <div onClick={toggleTheme} id='tdnn' className={`tdnn ${theme == 'light' ? '':'day'}`}>\n            <div id='darkMode' className={`${theme == 'light' ? 'moon':'sun'}`}></div>\n        </div>\n    );\n};\nToggle.propTypes = {\n    theme: string.isRequired,\n    toggleTheme: func.isRequired,\n}\n\nexport default Toggle;","import React,{useState,useEffect} from 'react';\nimport './modal.css';\nimport data from '../../data.json'\nimport { string } from 'prop-types';\n\nfunction Modal(props) {\n  const item = data.filter((item)=>{\n    /* console.log(item.id === props.contentIndex); */\n    return item.id === props.contentIndex;\n  })\n  console.log(item[0]);\n  return (\n    <div className={`parent_Modal ${props.modalState == '0' ? 'close':'active'}`} >\n      <div className={`main_Modal main_Modal_size ${props.theme == 'light'? '':'main_Modal_Dark'}`}>\n        <div onClick={props.Togglemodal} className={`modal_close ${props.theme == 'light'? '':'modal_close_Dark'}`}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><path d=\"M193.94 256L296.5 153.44l21.15-21.15c3.12-3.12 3.12-8.19 0-11.31l-22.63-22.63c-3.12-3.12-8.19-3.12-11.31 0L160 222.06 36.29 98.34c-3.12-3.12-8.19-3.12-11.31 0L2.34 120.97c-3.12 3.12-3.12 8.19 0 11.31L126.06 256 2.34 379.71c-3.12 3.12-3.12 8.19 0 11.31l22.63 22.63c3.12 3.12 8.19 3.12 11.31 0L160 289.94 262.56 392.5l21.15 21.15c3.12 3.12 8.19 3.12 11.31 0l22.63-22.63c3.12-3.12 3.12-8.19 0-11.31L193.94 256z\"/></svg></div>\n        {         \n          <>\n            <p key={item[0].id}></p>\n            <div className='modal_content modal_content_left'>\n              <img src={`${item[0].img}`}></img>\n            </div>\n            <div className='modal_content modal_content_right'>\n              <label className='modal_title'>{item[0].title}</label><br/>\n              <label>{item[0].description}</label>\n\n\n            </div>\n          </>\n        }\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  theme: string.isRequired,\n}\nexport default Modal;","export default __webpack_public_path__ + \"static/media/male.3be62aad.png\";","export default __webpack_public_path__ + \"static/media/female.1bd35adc.png\";","import React from 'react';\nimport '../styles/style.css';\nimport { string } from 'prop-types';\nimport maleImage from '../../avatar/male.png';\nimport femaleImage from '../../avatar/female.png';\n\n\nfunction allowDrop(ev) {\n    ev.stopPropagation();\n    ev.preventDefault();\n    if(!document.querySelector('.drop_avatar').classList.contains('over'))\n        document.querySelector('.drop_avatar').classList.add('over');\n}\nfunction allowDropLeave(ev) {\n    ev.stopPropagation();\n    ev.preventDefault();\n    if(document.querySelector('.drop_avatar').classList.contains('over'))\n        document.querySelector('.drop_avatar').classList.remove('over');\n}\nfunction drop(ev) {\n    if(document.querySelector('.drop_avatar').classList.contains('over'))\n        document.querySelector('.drop_avatar').classList.remove('over');\n    removePlaceHolder();\n    ev.stopPropagation();\n    ev.preventDefault();\n    let list = document.querySelector('.avatar_carrier').childNodes;\n    console.log(list);\n    let items = [...list].map((elt)=>{\n            if(elt.classList.contains('selected'))\n                elt.classList.remove('selected');\n    })\n    document.querySelector('.drop_placeholder').classList.add('none');\n    \n    let files = ev.dataTransfer ? ev.dataTransfer.files[0] : ev.target.files[0];\n    //return\n     //ev.dataTransfer.files[0]; // FileList object.\n    const reader = new FileReader();\n    reader.readAsDataURL(files);\n    reader.onload = () => {\n      const image = new Image();\n      image.src = reader.result;\n      image.onload = () => {\n        const canvas = document.querySelector('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const context = canvas.getContext('2d');\n        context.filter = 'blur(10px)';\n        context.drawImage(image, 0, 0);\n      }\n    }\n}\nfunction removePlaceHolder() {\n    if(!document.querySelector('.drop_placeholder').classList.contains('none'))\n        document.querySelector('.drop_placeholder').classList.add('none');\n}\n\nfunction selectImage(e) {\n    removePlaceHolder();\n    let list = e.target.parentNode.parentNode.childNodes;\n    if (!e.target.parentNode.classList.contains('selected')) {\n        e.target.parentNode.classList.add('selected');\n    }\n    let items = [...list].map((elt)=>{\n        if (elt !== e.target.parentNode) {\n            if(elt.classList.contains('selected'))\n                elt.classList.remove('selected');\n        }\n    })\n    e.target.parentNode.classList.add('selected');\n    const base_image = new Image();\n    base_image.src = e.target.getAttribute('src');\n    base_image.onload = ()=>{\n        const canvas = document.querySelector('canvas');\n        canvas.width = base_image.width;\n        canvas.height = base_image.height;\n        const context = canvas.getContext('2d');\n        context.filter = 'blur(10px)';\n        context.drawImage(base_image, 0, 0);\n    }\n}\n\nfunction importImage(props) {\n    return (\n      <div className='avatar_container'>\n        <div className={`drop_avatar ${props.theme == 'light' ? '':'drop_avatar_Dark'}`} onDrop={(ev)=>{drop(ev)}} onDragOver={(ev)=>{allowDrop(ev)}} onDragLeave={(ev)=>{allowDropLeave(ev)}}>\n            <canvas className='canvas'/>\n            <label className={`drop_placeholder ${props.theme == 'light' ? '':'drop_placeholder_Dark'}`}>DROP IMAGE HERE</label>\n            <input type='file' className='avtar_file' onChange={(e)=>{drop(e)}}></input>\n        </div>\n        <label className='avatar_OR'>OR</label>\n        <div className='avatar_carrier'>\n            <div className='male_avatar' onClick={(e)=>{selectImage(e)}}><img className='avatar_image' src={maleImage}/></div>\n            <div className='female_avatar'  onClick={(e)=>{selectImage(e)}}><img className='avatar_image' src={femaleImage}/></div>\n        </div>\n      </div>\n    );\n}\n\nimportImage.propTypes = {\n    theme: string.isRequired\n}\n\nexport default importImage;\n\n","import React from 'react';\nimport '../styles/style.css';\nimport { string } from 'prop-types';\nimport ImportImage from './importImage.js';\n\nfunction submitStart(e) {\n    e.preventDefault();\n    let list = document.querySelectorAll('.form_input');\n    // return\n    let items = [...list].map((elt)=>{\n        //console.log(elt.value);\n        if(elt.value == ''){\n            elt.classList.add('shadow_error');\n            document.querySelector('label[for='+elt.getAttribute(\"placeholder\")+']').classList.remove('hidden');\n            document.querySelector('label[for='+elt.getAttribute(\"placeholder\")+']').innerText = 'please fill this field';\n        }else{\n            if (elt.getAttribute(\"placeholder\") == 'email') {\n                console.log(elt.value.length);\n                if (elt.value.length < 5) {\n                    if(!elt.classList.contains('shadow_error'))\n                        elt.classList.add('shadow_error');\n\n                    document.querySelector('label[for='+elt.getAttribute(\"placeholder\")+']').classList.remove('hidden');\n                    document.querySelector('label[for='+elt.getAttribute(\"placeholder\")+']').innerText = 'invalid e-mail format';\n                    return                  \n                }\n                if(!(elt.value.includes(\"@\") && elt.value.includes(\".\"))){\n                    if(!elt.classList.contains('shadow_error'))\n                        elt.classList.add('shadow_error');\n\n                    document.querySelector('label[for='+elt.getAttribute(\"placeholder\")+']').classList.remove('hidden');\n                    document.querySelector('label[for='+elt.getAttribute(\"placeholder\")+']').innerText = 'invalid e-mail format'\n                }else{\n                    elt.classList.remove('shadow_error');\n                    document.querySelector('label[for='+elt.getAttribute(\"placeholder\")+']').classList.add('hidden');    \n                }\n            }else{\n                elt.classList.remove('shadow_error');\n                document.querySelector('label[for='+elt.getAttribute(\"placeholder\")+']').classList.add('hidden');\n            }\n        }\n    });\n}\nfunction loginForm(props) {\n  return (\n    <div className='form_container'>\n        <input className={`form_input ${ props.theme == 'dark' ? 'form_input_Dark' : ''}`} type=\"text\" placeholder='name'></input> <br/> {/* shadow_error */}\n        <label for=\"name\" className='login_verif hidden'></label><br/>\n        <input className={`form_input ${ props.theme == 'dark' ? 'form_input_Dark' : ''}`} type='email' placeholder='email'></input> <br/>\n        <label for=\"email\" className='login_verif hidden'></label><br/>\n        <ImportImage theme={props.theme}/>\n        <button className={`btnStart ${props.theme == 'light' ? '':'btnStart_Dark'}`} onClick={ e=>{submitStart(e)} }>start</button> \n    </div>\n  );\n}\n\nloginForm.propTypes = {\n    theme: string.isRequired\n}\n\nexport default loginForm;","import React from 'react';\nimport '../styles/style.css';\nimport { string } from 'prop-types';\nimport LoginForm from './loginForm.js'\n\n\nfunction loginApp(props) {\n  return (\n      <div id='login' className='Loginparent loginParent_position'>\n        <label className='loginLabel height' >Register</label>\n        <form>\n          <LoginForm theme={props.theme}/>\n        </form>\n      </div>\n  );\n}\n\n/* Document.prototype.createElementFromString = function (str) {\n  const element = new DOMParser().parseFromString(str, 'text/html');\n  const child = element.documentElement.querySelector('body').firstChild;\n  return child;\n}; */\nloginApp.propTypes = {\n  theme: string.isRequired\n}\nexport default loginApp;\n","// import React from 'react';\nimport { useState } from 'react';\nimport '../styles/style.css';\nimport { string } from 'prop-types';\n\n/* function scrollToElement(e,clickData) {\n    alert(clickData); \n    e.preventDefault();\n    document.querySelector('.Loginparent').scrollIntoView({ behavior: 'smooth' });\n    document.querySelectorAll('.form_input')[0].focus();\n    console.log(document.querySelectorAll('.form_input')[0]);\n} */\n\n\nfunction Cards(props) {\n    \n    return (\n        <div className={`card ${ props.theme === 'light' ? 'card_Light':'card_Dark'} `}>\n            <img src={`${props.image}`} alt='img'></img>\n            <div onClick={props.Togglemodal} data-value={props.clickEvent}>{props.name}</div>\n        </div>\n    );\n}\n\n// const Cards = (props) => {...}  scrollToElement(e,props.clickEvent)\nCards.propTypes = {\n    theme: string.isRequired,\n    name: string.isRequired,\n    image: string.isRequired\n}\nexport default Cards;\n","export default __webpack_public_path__ + \"static/media/link.59308be5.svg\";","import React, { useState, useEffect }  from \"react\";\nimport {useDarkMode} from \"../useDarkMode\";\nimport {useModalState} from \"../modal/useModalState\"\nimport {ThemeProvider} from \"styled-components\";\nimport { GlobalStyles } from \"../globalStyles\";\nimport { lightTheme, darkTheme } from \"../theme\"\nimport Toggle from \"../toggler\"\nimport ModalView from \"../modal/modal\";\nimport JSONData from '../../data.json';\n\nimport '../styles/style.css';\nimport LoginApp from '../login/loginApp.js';\nimport Cards from '../card/card.js'\nimport Link from '../../svg/link.svg'\n\n\nfunction scrollToElement(e) {\n    e.preventDefault();\n    document.querySelector('.welcome_features').scrollIntoView({ behavior: 'smooth' });\n}\n\nfunction animation(type) {\n    // Some random colors\n    //return;\n    //if(type == 'light') return\n\n    const colors = [\"#3CC157\", \"#2AA7FF\", \"#1B1B1B\", \"#FCBC0F\", \"#F85F36\"];\n\n    const numBalls = 50;\n    const balls = [];\n    //const body = document.querySelector('.parent1')\n    for (let i = 0; i < numBalls; i++) {\n        let ball = document.createElement(\"div\");\n        ball.classList.add(\"ball\");\n        ball.style.background = colors[Math.floor(Math.random() * colors.length)];\n        ball.style.left = `${Math.floor(Math.random() * 100)}vw`;\n        ball.style.top = `${Math.floor(Math.random() * 100)}vh`;\n        ball.style.transform = `scale(${Math.random()})`;\n        ball.style.width = `${Math.random()}em`;\n        ball.style.height = ball.style.width;\n        \n        balls.push(ball);\n        document.body.append(ball);\n    }\n\n    // Keyframes\n    balls.forEach((el, i, ra) => {\n        let to = {\n            x: Math.random() * (i % 2 === 0 ? -11 : 11),\n            y: Math.random() * 12\n        };\n\n        let anim = el.animate(\n            [\n                { transform: \"translate(0, 0)\" },\n                { transform: `translate(${to.x}rem, ${to.y}rem)` }\n            ],\n            {\n                duration: (Math.random() + 1) * 2000, // random duration\n                direction: \"alternate\",\n                fill: \"both\",\n                iterations: Infinity,\n                easing: \"ease-in-out\"\n            }\n        );\n    });\n\n}\n\n/* function toggleDarkMode() {\n    var P_elt = document.getElementById('tdnn');\n    var elt = document.getElementById('darkMode');\n    if(elt.classList.contains('moon')){\n        elt.classList.remove('moon');\n        elt.classList.add('sun');\n        P_elt.classList.add('day');\n    }else{\n        elt.classList.remove('sun');\n        elt.classList.add('moon');\n        P_elt.classList.remove('day');\n    }\n} */\n\nfunction Welcome() {\n    // const [theme, setTheme] = useState('light');\n    // const themeToggler = () => {\n    //     toggleDarkMode();\n    //     theme === 'light' ? setTheme('dark') : setTheme('light');\n    // }\n    // const [theme, themeToggler] = useDarkMode();\n    const [theme, themeToggler, mountedComponent] = useDarkMode();\n    const [modal, index, modalToggler]  = useModalState();\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n    const data = JSONData.map((items)=>{\n        return items;\n    })\n    const [modules, setModule] = useState(data);\n\n    if(!mountedComponent) return <div/>\n    return (\n        <ThemeProvider theme={themeMode}>\n            <>\n                <GlobalStyles/>\n                    {<ModalView contentIndex={index} Togglemodal={modalToggler} modalState={modal} theme={theme} />}\n                    <Toggle theme={theme} toggleTheme={themeToggler}/>\n                    <div className='parent1'>\n                        <div className='main_parent' onLoad={()=>{ animation(theme) }}>\n                            <div className='welcome_title alt'>\n                                <div className='welcome_title_txt_cnt'>\n                                    <h1 className='welcome_title_Txt'>Welcome to <br/> link...</h1>\n                                    <h3>A simple, reliable and secure way to connect<br/> with family and friends all over the world ;) </h3>\n                                </div>\n                                <div className='welcome_title_img_Cont'>\n                                    <img src={Link} style={{ 'width':'100%', 'margin-top':'4%', 'height':'100%','margin-left':'-30px'}}></img>\n                                </div>\n                            </div>\n                            <div className='scroll_btn' onClick={(e)=>{scrollToElement(e)}}>\n                                <a href=\"#\"><span className={`${theme == 'light' ? 'darkArrow':'lightArrow'}`}></span></a>\n                            </div>\n                        </div>\n                    <div className='welcome_features welcome_features_position'>\n                        <LoginApp theme={theme}/>\n                        <div className='features_desc'>\n                            <div className='secondary_head_cnt'>\n                                <h1 className='secondary_head_txt'>Start Now!</h1>\n                                <h3 style={{'line-height':'0','font-weight':'100'}}>Register and connect in 4 different ways</h3>\n                            </div>\n                            <div className='card_box_cnt'>\n                                {\n                                    modules.map(items=>{\n                                        console.log('<Cards key={'+items.id+'} Togglemodal={modalToggler} clickEvent={'+items.id+'} theme={'+theme+'} image={'+items.img+'} name={'+items.title+'} />}');\n                                        return <Cards key={items.id} Togglemodal={modalToggler} clickEvent={`${items.id}`} theme={theme} image={`${items.img}`} name={`${items.title}`} />\n                                    })\n                                }\n                                \n                                \n                               {/*  \n                                    <Cards Togglemodal={modalToggler} clickEvent={element.id} theme={theme} image={Group} name=' Group call' />\n                                    <Cards Togglemodal={modalToggler} clickEvent={\"1\"} theme={theme} image={Peer} name=' Peer to peer call' />\n                                    <Cards Togglemodal={modalToggler} clickEvent={\"2\"} theme={theme} image={Chat} name=' chat' />\n                                    <Cards Togglemodal={modalToggler} clickEvent={\"3\"} theme={theme} image={Conference} name='Conference'/> \n                                */}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='footer'> made with ❤️ by<a href='https://www.linkedin.com/in/gildas-nuwu-925454159/'> NUWU Gildas</a></div>\n                </div>\n            </>\n        </ThemeProvider>\n    );\n}\n\nexport default Welcome;","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n    \n    const [theme, setTheme] = useState('light');\n    const [mountedComponent, setMountedComponent] = useState(false);\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    };\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme && setTheme(localTheme);\n        setMountedComponent(true);\n    }, []);\n    return [theme, themeToggler, mountedComponent]\n};\n","import { useState } from 'react';\n\nexport const useModalState = () => {\n    \n    const [modal, setModal] = useState('0');\n    const [index, setIndex] = useState('0');\n\n    const modalToggler = (e) => {\n        //console.log(e);\n        e.stopPropagation();\n        modal === '0' ? setModal('1') : setModal('0');\n        console.log(e.target.getAttribute(\"data-value\"));\n        if (e.target.getAttribute(\"data-value\")) {\n            setIndex(e.target.getAttribute(\"data-value\"));\n        }\n    };\n    return [modal, index, modalToggler]\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WelcomePage from './components/welcome/welcome.js';\n/* import Modal from './components/modal/modal.js' */\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WelcomePage/>\n    {/* <Modal/> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}